/* Custom styles for Dirtflix Playlist Generator */

:root {
  --bg-primary: #f8f9fa;
  --bg-secondary: white;
  --text-primary: #2c3e50;
  --text-secondary: #6c757d;
  --border-color: #dee2e6;
  --card-bg: white;
  --header-bg: #007bff;
  --header-text: white;
  --item-card-bg: white;
  --item-hover-bg: rgba(0, 0, 0, 0.05);
  --button-bg: #007bff;
  --button-text: white;
  --modal-bg: white;
  --modal-border: #dee2e6;
}

[data-theme="dark"] {
  --bg-primary: #1a1a1a;
  --bg-secondary: #2d2d2d;
  --text-primary: #f8f9fa;
  --text-secondary: #adb5bd;
  --border-color: #495057;
  --card-bg: #2d2d2d;
  --header-bg: #343a40;
  --header-text: white;
  --item-card-bg: #2d2d2d;
  --item-hover-bg: rgba(255, 255, 255, 0.1);
  --button-bg: #6c757d;
  --button-text: white;
  --modal-bg: #343a40;
  --modal-border: #495057;
}

body {
    background-color: var(--bg-primary);
    color: var(--text-primary);
}

header h1 {
    font-weight: 700;
    color: var(--text-primary);
}

.card {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    border: 1px solid var(--border-color);
    border-radius: 0.5rem;
    transition: transform 0.2s ease-in-out;
    background-color: var(--card-bg);
}

/* Remove hover effect from main structural cards */
.card:not(.card-header.bg-primary):not(.card-header.bg-success):not(.card-header.bg-info):hover {
    transform: translateY(-0px);
}

/* Keep hover effect for items inside master list */
#masterListContainer .item-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.card-header {
    font-weight: 600;
    border-bottom: none;
    background-color: var(--header-bg);
    color: var(--header-text);
}

/* Custom badge for item count */
#masterListCount {
    font-size: 0.875em;
    padding: 0.25rem 0.5rem;
    background-color: var(--bg-secondary);
    color: var(--text-primary);
}

/* Item display styling */
.item-card {
    transition: all 0.3s ease;
    border: 1px solid var(--border-color);
    margin-bottom: 0;
    background-color: var(--item-card-bg);
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    padding: 0;
}

.item-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    background-color: var(--item-hover-bg);
}

.item-image {
    width: 100%;
    max-width: 300px;
    height: 200px !important;
    object-fit: cover;
    border-bottom: 1px solid var(--border-color);
    display: block;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
}

.item-card {
    width: 304px;
    max-width: 100%;
    margin-bottom: 1rem;
    flex: 0 0 auto; /* Prevents flex-grow which helps with wrapping */
    display: flex;
    flex-direction: column;
}

.card-img-top {
    width: 100%;
    max-width: 300px;
    height: 200px !important;
    display: block;
    margin-left: auto;
    margin-right: auto;
    box-sizing: border-box;
}

/* Ensure proper wrapping of items */
#masterListContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: flex-start;
    padding: 0;
    margin: 0;
}

/* Fluid grid for master list items */
#masterListContainer .item-card {
    max-width: 300px !important;
    margin: 0.25rem; /* Add consistent spacing */
}

/* Adjust for different screen sizes */
@media (max-width: 992px) {
    #masterListContainer .item-card {
        flex: 1 1 calc(33.33% - 0.5rem); /* 3 columns on medium screens */
    }
}

@media (max-width: 768px) {
    #masterListContainer .item-card {
        flex: 1 1 calc(50% - 0.5rem); /* 2 columns on small screens */
    }
}

@media (max-width: 576px) {
    #masterListContainer .item-card {
        flex: 1 1 100%; /* 1 column on extra small screens */
    }
}

/* Remove extra spacing from grid containers */
#masterListContainer .col-md-6.col-lg-4 {
    padding: 0;
    margin: 0;
}

/* Remove any conflicting margin/padding from item-card wrapper */
#masterListContainer .item-card {
    margin: 0.25rem !important;
    padding: 0 !important;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
    .item-card {
        width: 100%;
        max-width: 300px;
        margin-left: auto;
        margin-right: auto;
    }
    
    #masterListContainer {
        justify-content: center;
    }
}

.item-title {
    font-weight: 600;
    color: var(--text-primary);
}

.item-year {
    font-size: 0.875em;
    color: var(--text-secondary);
}

.item-rating {
    font-weight: 600;
    color: #ffc107;
}

.item-genre {
    font-size: 0.875em;
    color: var(--text-secondary);
    margin-bottom: 0.25rem;
}

/* Status messages */
#statusMessages {
    min-height: 50px;
}

.alert {
    border-radius: 0.375rem;
    margin-bottom: 0.5rem;
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
}

/* Responsive adjustments */
@media (max-width: 992px) {
    .container-fluid {
        padding-left: 1rem;
        padding-right: 1rem;
    }
    
    .card-body {
        padding: 1rem;
    }
}

/* Loading spinner */
.spinner-border {
    width: 1.5rem;
    height: 1.5rem;
}

/* Theme variables - Light mode */
:root {
    --bg-primary: #ffffff;
    --bg-secondary: #f8f9fa;
    --text-primary: #212529;
    --text-secondary: #6c757d;
    --border-color: #dee2e6;
    --card-bg: #ffffff;
    --modal-bg: #ffffff;
    --modal-border: #dee2e6;
    --button-bg: #007bff;
    --button-text: #ffffff;
    --success-color: #28a745;
    --warning-color: #ffc107;
    --danger-color: #dc3545;
}

/* Theme variables - Dark mode */
[data-theme="dark"] {
    --bg-primary: #121212;
    --bg-secondary: #1e1e1e;
    --text-primary: #e0e0e0;
    --text-secondary: #a0a0a0;
    --border-color: #333333;
    --card-bg: #1e1e1e;
    --modal-bg: #1e1e1e;
    --modal-border: #333333;
    --button-bg: #0d6efd;
    --button-text: #ffffff;
    --success-color: #28a745;
    --warning-color: #ffc107;
    --danger-color: #dc3545;
}

/* Add light gray borders to main containers in dark mode */
[data-theme="dark"] .card {
    border: 2px solid #6c757d !important;
}

/* Apply theme variables to existing styles */
body {
    background-color: var(--bg-primary);
    color: var(--text-primary);
}

.card {
    background-color: var(--card-bg);
    border-color: var(--border-color);
}

.card-header {
    background-color: var(--bg-secondary);
    border-color: var(--border-color);
}

.alert {
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    border-color: var(--border-color);
}

.modal-content {
    background-color: var(--modal-bg);
    border-color: var(--modal-border);
}

.modal-header {
    background-color: var(--bg-secondary);
    border-bottom-color: var(--border-color);
}

.modal-body {
    color: var(--text-primary);
}

.btn-primary {
    background-color: var(--button-bg);
    color: var(--button-text);
}

/* Custom scrollbar */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: var(--bg-secondary);
}

::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}

/* Resizable select elements */
.resizable-select {
    min-height: 240px;
    max-height: 600px;
    resize: vertical;
    overflow-y: auto;
    /* Ensure the element grows downward properly */
    box-sizing: border-box;
    background-color: var(--bg-secondary);
    color: var(--text-primary);
}

/* Resizable filter containers */
.filter-container {
    min-height: 150px;
    max-height: 400px;
    resize: vertical;
    overflow: hidden;
    position: relative;
    /* Ensure proper layout for resizing */
    display: flex;
    flex-direction: column;
    background-color: var(--bg-secondary);
}

.filter-container .form-label {
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.filter-container select {
    flex-grow: 1;
    /* This ensures the select element expands to fill available space */
    background-color: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border-color);
}

/* Remove hover effects from filter containers to prevent conflicts with resize handles */
.filter-container:hover,
.filter-container.mb-3:hover {
    box-shadow: none !important;
    cursor: default !important;
}

/* Bold styling for main filter labels */
.card-body .form-label {
    font-weight: bold !important;
    color: var(--text-primary);
}

.filter-container::after {
    content: "â†•";
    position: absolute;
    right: 10px;
    bottom: 5px;
    opacity: 0.3;
    font-size: 20px;
    pointer-events: none;
    color: var(--text-secondary);
}

/* Make Ctrl/Cmd hint text white in dark mode */
[data-theme="dark"] .filter-container small.text-muted {
    color: #ffffff !important;
}

/* Make rating slider numbers white in dark mode */
[data-theme="dark"] .mb-3 .d-flex.justify-content-between span {
    color: #ffffff !important;
}

/* Ensure all text within card-body elements appears white in dark mode */
[data-theme="dark"] .card-body {
    color: white !important;
}

/* Ensure specific text elements maintain their styles while being white in dark mode */
[data-theme="dark"] .card-body .item-year,
[data-theme="dark"] .card-body .item-rating,
[data-theme="dark"] .card-body .item-genre {
    color: white !important;
}

/* Make all text within item cards white in dark mode */
[data-theme="dark"] .item-card {
    color: white !important;
}

/* Ensure specific item card text elements are white in dark mode */
[data-theme="dark"] .item-title,
[data-theme="dark"] .item-year,
[data-theme="dark"] .item-rating,
[data-theme="dark"] .item-genre {
    color: white !important;
}

/* Ensure flexbox is properly applied to master list items */
#masterListContainer > .item-card {
    margin: 0 !important;
    padding: 0 !important;
}

/* Add flexbox styling for working list container to enable horizontal flow */
#workingListContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: flex-start;
    padding: 0;
    margin: 0;
}

/* Center empty state in working list container */
#workingListContainer .text-center.py-5.text-muted {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
}

/* Center empty state in master list container */
#masterListContainer .text-center.py-5.text-muted {
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
}

/* Ensure empty state text is visible in dark mode */
[data-theme="dark"] #workingListContainer .text-center.py-5.text-muted,
[data-theme="dark"] #masterListContainer .text-center.py-5.text-muted {
    color: white !important;
}

/* Make item text white in dark mode for both working and master lists */
[data-theme="dark"] #workingListContainer .item-title,
[data-theme="dark"] #workingListContainer .item-year,
[data-theme="dark"] #workingListContainer .item-rating,
[data-theme="dark"] #masterListContainer .item-title,
[data-theme="dark"] #masterListContainer .item-year,
[data-theme="dark"] #masterListContainer .item-rating {
    color: white !important;
}

/* Ensure item genres remain black in dark mode */
[data-theme="dark"] #workingListContainer .item-genre,
[data-theme="dark"] #masterListContainer .item-genre {
    color: #6c757d !important;
}

/* Modal styles */
.modal-content {
    background-color: var(--modal-bg);
    border: 1px solid var(--modal-border);
}

.modal-header {
    background-color: var(--bg-secondary);
    border-bottom: 1px solid var(--border-color);
}

.modal-body {
    background-color: var(--modal-bg);
    color: var(--text-primary);
}

/* Button styles */
.btn-primary {
    background-color: var(--button-bg);
    color: var(--button-text);
    border: none;
}

.btn-primary:hover {
    background-color: var(--button-bg);
    opacity: 0.85;
}

header h1 {
    font-weight: 700;
    color: #2c3e50;
}

[data-theme="dark"] header h1 {
    color: #adb5bd !important;
}

[data-theme="dark"] .form-check-label {
    color: white !important;
}

/* Change Create New Playlist header and button to dark green */
.card-header.bg-info {
    background-color: #1e3a1e !important;
    color: white !important;
}

.btn-info {
    background-color: #1e3a1e !important;
    border-color: #1e3a1e !important;
    color: white !important;
}

.card {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    border: 1px solid rgba(0, 0, 0, 0.125);
    border-radius: 0.5rem;
    transition: transform 0.2s ease-in-out;
}

/* Remove hover effect from main structural cards */
.card:not(.card-header.bg-primary):not(.card-header.bg-success):not(.card-header.bg-info):hover {
    transform: translateY(-0px);
}

/* Keep hover effect for items inside master list */
#masterListContainer .item-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.card-header {
    font-weight: 600;
    border-bottom: none;
}

/* Custom badge for item count */
#masterListCount {
    font-size: 0.875em;
    padding: 0.25rem 0.5rem;
}

/* Item display styling */
.item-card {
    transition: all 0.3s ease;
    border: 1px solid #dee2e6;
    margin-bottom: 0;
    background-color: white;
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    padding: 0;
}

.item-card:hover {
    transform: translateY(-3px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
}

.item-image {
    width: 300px !important;
    height: 200px !important;
    object-fit: cover;
    border-bottom: 1px solid #dee2e6;
}

.item-card {
    width: 304px;
    margin-bottom: 1rem;
    flex: 0 0 auto; /* Prevents flex-grow which helps with wrapping */
    display: flex;
    flex-direction: column;
}

.card-img-top {
    width: 300px !important;
    height: 200px !important;
}

/* Ensure proper wrapping of items */
#masterListContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: flex-start;
    padding: 0;
    margin: 0;
}

/* Fluid grid for master list items */
#masterListContainer .item-card {
    max-width: 300px !important;
    margin: 0.25rem; /* Add consistent spacing */
}

/* Adjust for different screen sizes */
@media (max-width: 992px) {
    #masterListContainer .item-card {
        flex: 1 1 calc(33.33% - 0.5rem); /* 3 columns on medium screens */
    }
}

@media (max-width: 768px) {
    #masterListContainer .item-card {
        flex: 1 1 calc(50% - 0.5rem); /* 2 columns on small screens */
    }
}

@media (max-width: 576px) {
    #masterListContainer .item-card {
        flex: 1 1 100%; /* 1 column on extra small screens */
    }
}

/* Remove extra spacing from grid containers */
#masterListContainer .col-md-6.col-lg-4 {
    padding: 0;
    margin: 0;
}

/* Remove any conflicting margin/padding from item-card wrapper */
#masterListContainer .item-card {
    margin: 0.25rem !important;
    padding: 0 !important;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 768px) {
    .item-card {
        width: 100%;
        max-width: 300px;
        margin-left: auto;
        margin-right: auto;
    }
    
    #masterListContainer {
        justify-content: center;
    }
}

.item-title {
    font-weight: 600;
    color: #2c3e50;
}

.item-year {
    font-size: 0.875em;
    color: #6c757d;
}

.item-rating {
    font-weight: 600;
    color: #ffc107;
}

.item-genre {
    font-size: 0.875em;
    color: #6c757d;
    margin-bottom: 0.25rem;
}

/* Status messages */
#statusMessages {
    min-height: 50px;
}

.alert {
    border-radius: 0.375rem;
    margin-bottom: 0.5rem;
}

/* Responsive adjustments */
@media (max-width: 992px) {
    .container-fluid {
        padding-left: 1rem;
        padding-right: 1rem;
    }
    
    .card-body {
        padding: 1rem;
    }
}

/* Loading spinner */
.spinner-border {
    width: 1.5rem;
    height: 1.5rem;
}

/* Custom scrollbar */
::-webkit-scrollbar {
    width: 8px;
    height: 8px;
}

::-webkit-scrollbar-track {
    background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
}

/* Resizable select elements */
.resizable-select {
    min-height: 240px;
    max-height: 600px;
    resize: vertical;
    overflow-y: auto;
    /* Ensure the element grows downward properly */
    box-sizing: border-box;
}

/* Resizable filter containers */
.filter-container {
    min-height: 150px;
    max-height: 400px;
    resize: vertical;
    overflow: hidden;
    position: relative;
    /* Ensure proper layout for resizing */
    display: flex;
    flex-direction: column;
}

.filter-container .form-label {
    margin-bottom: 0.5rem;
}

.filter-container select {
    flex-grow: 1;
    /* This ensures the select element expands to fill available space */
}

/* Remove hover effects from filter containers to prevent conflicts with resize handles */
.filter-container:hover,
.filter-container.mb-3:hover {
    box-shadow: none !important;
    cursor: default !important;
}

/* Bold styling for main filter labels */
.card-body .form-label {
    font-weight: bold !important;
}

.filter-container::after {
    content: "â†•";
    position: absolute;
    right: 10px;
    bottom: 5px;
    opacity: 0.3;
    font-size: 20px;
    pointer-events: none;
}

/* Ensure flexbox is properly applied to master list items */
#masterListContainer > .item-card {
    margin: 0 !important;
    padding: 0 !important;
}

/* Add flexbox styling for working list container to enable horizontal flow */
#workingListContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: flex-start;
    padding: 0;
    margin: 0;
}